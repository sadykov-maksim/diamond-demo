upstream app {
    server web:443;
}

upstream websocket {
    server daphne:443;
}

server {
    listen 80;
    server_name mnchrm.pro *.mnchrm.pro;
    return 301 https://$host$request_uri;
}

server {
    listen       443 ssl http2;
    listen  [::]:443;
    server_name  mnchrm.pro;

    ssl_certificate /etc/letsencrypt/live/mnchrm.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mnchrm.pro/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    if ($scheme = 'http') {
        return 301 https://$host$request_uri;
    }

    #access_log  /var/log/nginx/host.access.log  main;
    location / {
        proxy_pass https://app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_set_header Host $host;
        proxy_redirect off;
        client_max_body_size 100M;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server {
    listen       443;
    listen  [::]:443;
    server_name  static.mnchrm.pro;

    location / {
        alias /var/www/html/static/;
        add_header Access-Control-Allow-Origin *;
    }
}

server {
    listen       443;
    listen  [::]:443;
    server_name  media.mnchrm.pro;

    location / {
        alias /var/www/html/media/;
        add_header Access-Control-Allow-Origin *;
    }
}

server {
    listen       443;
    listen  [::]:443;
    server_name  ws.mnchrm.pro;

    location / {
        proxy_pass https://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Roreal-IP $remote_addr;
        proxy_set_header X-Fwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }
}
