from random import random
import asyncio
import random

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import CallbackQuery, Message, InputMediaPhoto

from main.management.commands.tgbot.handlers.method import spin_roulette2, save_game_history
from main.management.commands.tgbot.keyboards.inline import roulette_keyboard
from main.management.commands.tgbot.misc.states import Form, Roulette
from main.models import TelegramUser, GameHistory


roulette_results = [
    "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 100 –º–æ–Ω–µ—Ç! üéâ",
    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –£–¥–∞—á–∞ –Ω–µ –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! üòû",
    "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –¥–∂–µ–∫–ø–æ—Ç! üí∞",
    "–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏... –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑! üîÑ",
    "–°—é—Ä–ø—Ä–∏–∑! –í–∞—à –≤—ã–∏–≥—Ä—ã—à ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–æ—Ñ–µ! ‚òï"
]

router = Router()

@router.callback_query(Roulette.state_1, F.text)
async def handle_slots_bet(callback: CallbackQuery, state: FSMContext):
    bet_amount = callback.text

    if bet_amount.isdigit():
        bet_amount = int(bet_amount)
        telegram_user = await TelegramUser.objects.filter(telegram_id=callback.from_user.id).afirst()
        if not telegram_user:
            await callback.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
        await callback.message.edit_media(
            media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=–í—ã–±–µ—Ä–µ—Ç–µ —Ä–µ–∂–∏–º",
                                  caption=f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å—Ç–∞–≤–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"),
            reply_markup=roulette_keyboard())
    else:
        await callback.answer("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å—Ç–∞–≤–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.")

@router.callback_query(lambda c: c.data == 'spin_roulette')
async def spin_roulette(callback: CallbackQuery):
    bet_amount = int(15)

    if bet_amount:
        bet_amount = int(bet_amount)
        telegram_user = await TelegramUser.objects.filter(telegram_id=callback.from_user.id).afirst()
        if not telegram_user:
            await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        if bet_amount > 0 and telegram_user.balance >= bet_amount:
            telegram_user.balance -= bet_amount
            await telegram_user.asave()

            category_id = 1  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            item = spin_roulette2(category_id)
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã

            win_amount = int(item.name)
            if win_amount > 0:
                telegram_user.balance += win_amount
                result_text = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount}‚ÇΩ üéâ"
                outcome = "–ü–æ–±–µ–¥–∞"
            else:
                result_text = "–£–≤—ã, –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!"
                outcome = "–ü—Ä–æ–∏–≥—Ä—ã—à"

            await telegram_user.asave()
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–≥—Ä—ã
            await save_game_history(telegram_user, "–†—É–ª–µ—Ç–∫–∞ üé°", bet_amount, win_amount, outcome)

            await callback.answer()
            await callback.message.edit_media(
                media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=–í—ã–±–µ—Ä–µ—Ç–µ —Ä–µ–∂–∏–º",
                                      caption=f"üé∞ {result_text}\n"
                f"–í–∞—à –±–∞–ª–∞–Ω—Å: {telegram_user.balance}‚ÇΩ\n–ß—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤—ã—Ö–æ–¥–∞."),
                reply_markup=roulette_keyboard())

        else:
            await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.")
    else:
        await callback.answer("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å—Ç–∞–≤–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Ä—É–ª–µ—Ç–∫–∏
#@router.callback_query(lambda c: c.data == 'spin_roulette')
#async def spin_roulette(callback_query: CallbackQuery):
#    result = random.choice(roulette_results)
#    category_id = 1  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
#    item = spin_roulette2(category_id)
#    await callback_query.message.answer(f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {item.name}!")
#    await callback_query.answer()


