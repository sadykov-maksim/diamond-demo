from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message, InputMediaPhoto, InlineKeyboardMarkup, InlineKeyboardButton

from main.management.commands.tgbot.factory.support import SupportCbData, SupportActions, FaqCbData, FaqActions, \
    AnswerCbData, AnswerActions
from main.management.commands.tgbot.handlers.method import create_support_ticket, get_faq, get_answer_for_faq
from main.management.commands.tgbot.handlers.profile import router
from main.management.commands.tgbot.keyboards.pagination_inline import pagination_faq_keyboard
from main.management.commands.tgbot.keyboards.support_inline import faq_answer_keyboard, \
    edit_faq_answer_keyboard, faq_back_keyboard, report_issue_keyboard
from main.management.commands.tgbot.misc.states import ReportProblem
from support.models import FAQ, FAQFeedback



@router.callback_query(SupportCbData.filter(F.action == SupportActions.faq))
async def faq_command(callback: CallbackQuery):
    faq = await get_faq()
    await callback.message.edit_media(
        media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=FAQ", caption="–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç:"),
        reply_markup=await pagination_faq_keyboard(faq)
    )



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É FAQ
@router.callback_query(AnswerCbData.filter(F.action == AnswerActions.details))
async def faq_answer_callback(    call: CallbackQuery,
    callback_data: AnswerCbData):
    question_key = callback_data.callback_data
    answer = await get_answer_for_faq(callback_data.callback_data)  # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = call.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–≤–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∑—ã–≤ –¥–ª—è —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    feedback_exists = FAQFeedback.feedback_exists(user, question_key)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∏ –æ—Ç–∑—ã–≤
    if feedback_exists:
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ—Ü–µ–Ω–∫–æ–π
        keyboard = edit_faq_answer_keyboard(callback_data)
    else:
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –æ—Ü–µ–Ω–∫–∏
        keyboard = faq_answer_keyboard(callback_data)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–¥–∏–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await call.message.edit_media(
        media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=FAQ", caption=f"<b>{answer.question}</b>\n\n{answer.answer}"),
        reply_markup=keyboard
    )

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback
    await call.answer()


@router.callback_query(AnswerCbData.filter(F.action == AnswerActions.edit_answer))
async def handle_edit_faq_answer(callback_query: CallbackQuery, state: FSMContext, callback_data: AnswerCbData):
    try:
        #faq_q = FAQ.get_questions_by_filter(faq)
        faqs = FAQ.get_question(callback_data.callback_data)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç
        await callback_query.message.edit_media(media=InputMediaPhoto(media="https://placehold.co/500x500/png", caption=f"<b>{faqs.question}</b>\n\n{faqs.answer}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞:", parse_mode="HTML"), reply_markup=faq_answer_keyboard(callback_data))
        await callback_query.answer()

    except FAQ.DoesNotExist:
        await callback_query.answer("–≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

@router.callback_query(SupportCbData.filter(F.action == SupportActions.report_issue))
async def report_problem_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_media(
        media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=FAQ", caption=f"üìù –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ç–µ–º—É –¥–ª—è –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –±—ã—Å—Ç—Ä–µ–µ –≤–∞–º –ø–æ–º–æ—á—å."), reply_markup=report_issue_keyboard())
    await state.set_state(ReportProblem.waiting_for_problem)


@router.callback_query(AnswerCbData.filter(F.action == AnswerActions.understood))
async def faq_command(callback: CallbackQuery, state: FSMContext, callback_data: AnswerCbData):
    answer = await get_answer_for_faq(callback_data.callback_data)
    answer.add_feedback(answer.callback_data, callback.from_user.id, True)
    await callback.message.edit_media(
        media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=RES", caption="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É",
                              parse_mode="HTML"), reply_markup=faq_back_keyboard())

@router.callback_query(AnswerCbData.filter(F.action == AnswerActions.not_clear))
async def faq_command(callback: CallbackQuery, state: FSMContext, callback_data: AnswerCbData):
    answer = await get_answer_for_faq(callback_data.callback_data)
    answer.add_feedback(answer.callback_data, callback.from_user.id, False)
    await callback.message.edit_media(
        media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=RES", caption="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É",
                              parse_mode="HTML"), reply_markup=faq_back_keyboard())



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
@router.callback_query(ReportProblem.waiting_for_problem)
async def process_problem(callback: CallbackQuery, state: FSMContext):
    await state.update_data(subject=callback.data)

    await callback.message.edit_media(
        media=InputMediaPhoto(media="https://placehold.co/500x300/png/?text=FAQ", caption=f"üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –≤ –¥–µ—Ç–∞–ª—è—Ö –∏ —É—Ç–æ—á–Ω–∏—Ç–µ, –≤ –∫–∞–∫–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π.") )
    await state.set_state(ReportProblem.sending_request)



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
@router.message(ReportProblem.sending_request)
async def process_problem(message: Message, state: FSMContext):
    problem_text = message.text  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ–±–ª–µ–º—ã
    user_data = await state.get_data()
    print(user_data)
    # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    admin_id = 5313523026

    try:
        ticket = await create_support_ticket(user_data['subject'], message.from_user.id, problem_text)
        await message.answer(ticket)
    except ValueError as ex:
        print(ex)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É
    await message.bot.send_message(
        admin_id,
        f"‚ö†Ô∏è –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.full_name} (@{message.from_user.username}):\n\n{problem_text}"
    )
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

