from celery import shared_task
from django.core.management import call_command
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.client.default import DefaultBotProperties
from diamond.settings import env
from gamemode.models import WheelFortune
from main.management.commands.tgbot.keyboards.inline import game_keyboard
from .models import TelegramPost
from django.utils.timezone import now

@shared_task
def process_scheduled_posts():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'scheduled'.
    –ü—É–±–ª–∏–∫—É–µ—Ç –∑–∞–ø–∏—Å–∏, –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Å—Ç—É–ø–∏–ª–æ.
    –ü–ª–∞–Ω–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–µ–π —Å –±—É–¥—É—â–µ–π –¥–∞—Ç–æ–π.
    """
    posts = TelegramPost.objects.filter(status='scheduled')

    for post in posts:
        if post.publish_at <= now():
            # –ï—Å–ª–∏ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–æ
            publish_scheduled_posts(post.id)


@shared_task
def publish_scheduled_posts(post_id):
    """
    –ü—É–±–ª–∏–∫—É–µ—Ç –∑–∞–ø–∏—Å—å —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'scheduled' –∏ –≤—Ä–µ–º–µ–Ω–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ <= —Å–µ–π—á–∞—Å.
    """
    post = TelegramPost.objects.filter(id=post_id).first()
    try:
        call_command('publish_telegram_posts', post.id)
        post.status = 'published'
    except Exception as e:
        post.status = 'failed'
        post.error_message = str(e)
    post.save()

@shared_task
def notify_users_about_spins():
    """
    –£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–∏–Ω–∞—Ö –µ–∂–µ–¥–Ω–µ–≤–Ω–æ.
    """
    today = now().date()
    fortunes = WheelFortune.objects.all()
    for fortuna in fortunes:
        try:
            # –°–±—Ä–æ—Å —Å–ø–∏–Ω–æ–≤, –µ—Å–ª–∏ –Ω–∞—á–∞–ª—Å—è –Ω–æ–≤—ã–π –¥–µ–Ω—å
            if fortuna.last_spin_date != today:
                fortuna.spins_left = 1
                fortuna.last_spin_date = today
                fortuna.save()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø–∏–Ω—ã –¥–æ—Å—Ç—É–ø–Ω—ã
            if fortuna.spins_left > 0:
                asyncio.run(_notify_users_about_spins_async(fortuna.user.telegram_id))
        except Exception as e:
            # –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è (–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –¥—Ä—É–≥–æ–π –º–µ—Ö–∞–Ω–∏–∑–º)
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {fortuna.user.username}: {str(e)}")


async def _notify_users_about_spins_async( telegram_user_id):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    bot_token = env("BOT_TOKEN")
    button_text = "–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç"
    button_url = "https://example.com"

    bot = Bot(token=bot_token, default=DefaultBotProperties(parse_mode='Markdown'))

    await bot.send_message(chat_id=telegram_user_id, text=f"–ü—Ä–∏–≤–µ—Ç, üé∞ –£ –≤–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω 1 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–ø–∏–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ.", reply_markup=game_keyboard(), parse_mode="Markdown")
